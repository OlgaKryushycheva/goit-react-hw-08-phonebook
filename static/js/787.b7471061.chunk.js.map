{"version":3,"file":"static/js/787.b7471061.chunk.js","mappings":"gPAEIA,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACR,EACDyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOxB,CACR,CAwBD,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EACzC,IAEGgB,IACFhB,EAAQgB,EAAchB,MAEzB,CAEDL,EAAMM,IAAIa,UAAWd,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIG,MAAQ,WAAa,YAAcH,CAC1F,IAAEI,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGJ,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASU,EAAsBC,GACpC,IAAK,IAAIC,EAAOnB,UAAUtB,OAAQ0C,EAAyB,IAAIZ,MAAMW,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKrB,UAAUqB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQvB,UAAUtB,OAAQ4B,EAAQ,IAAIE,MAAMe,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFlB,EAAMkB,GAASxB,UAAUwB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBtC,GAGduC,EAAavB,EAAMT,MAQvB,GAN0B,kBAAfgC,IACTF,EAAwBE,EAExBA,EAAavB,EAAMT,OAGK,oBAAfgC,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBxB,MAAMC,QAAQmB,GAAkBA,EAAiB,CAACA,GACxErB,EAAeF,EAAgBC,GAC/B2B,EAAqBf,EAAQjB,WAAM,EAAQ,CAAC,WAG9C,OAFAyB,IAEOG,EAAW5B,MAAM,KAAMD,UAC/B,GAAEkC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACT1D,EAAS6B,EAAa7B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1ByD,EAAOC,KAAK9B,EAAa5B,GAAGsB,MAAM,KAAMD,YAK1C,OADAyB,EAAcQ,EAAmBhC,MAAM,KAAMmC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpB1B,aAAcA,EACdiC,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,IAAIA,EAAgCL,EAAsBnD,GCrGpD6E,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAKnBC,EAAyB7B,EACpC,CAACqB,EALyB,SAAAC,GAAK,OAAIA,EAAMQ,OAAOlE,KAAjB,IAO/B,SAAC2D,EAAUO,GAST,OANsBP,EAASO,QAAO,SAAAC,GAAO,OAC3CA,EAAQvC,KACLwC,oBACAC,SAASH,EAAOE,oBAAoBE,OAHI,GAO9C,ICbUC,EAAc,WACzB,MAAO,CACLZ,UAAUa,EAAAA,EAAAA,IAAYf,GACtBK,WAAWU,EAAAA,EAAAA,IAAYX,GACvBG,OAAOQ,EAAAA,EAAAA,IAAYT,GACnBU,iBAAiBD,EAAAA,EAAAA,IAAYP,GAEhC,E,mBCDYS,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAETjB,EAAaY,IAAbZ,SAkBR,OACE,SAAC,KAAD,CACEkB,cAlBW,CACbjD,KAAM,GACNkD,OAAQ,IAiBNC,iBAAkBC,EAAAA,GAClBC,SAfiB,SAACC,EAAQC,GACZxB,EAAS1C,MAAK,SAAAkD,GAAO,OAAIA,EAAQvC,OAASsD,EAAOtD,IAA5B,IAGnCwD,MAAM,GAAD,OAAIF,EAAOtD,KAAX,4BAEL+C,GAASU,EAAAA,EAAAA,IAAWH,IAEtBC,EAAQG,WACT,EAGC,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,mBAEE,SAAC,KAAD,CAAO1D,KAAK,OAAO2D,KAAK,UACxB,SAAC,KAAD,CAAc3D,KAAK,OAAO4D,UAAW,aAGvC,UAAC,KAAD,qBAEE,SAAC,KAAD,CAAO5D,KAAK,SAAS2D,KAAK,SAC1B,SAAC,KAAD,CAAc3D,KAAK,SAAS4D,UAAW,aAGzC,SAAC,KAAD,CAAKD,KAAK,SAAV,6BAIP,ECpDYE,EAAc,SAAC,GAAuC,IAAD,IAApCtB,QAAWvC,EAAyB,EAAzBA,KAAMkD,EAAmB,EAAnBA,OAAQY,EAAW,EAAXA,GAC/Cf,GAAWC,EAAAA,EAAAA,MAIjB,OACE,UAAC,KAAD,WACGhD,EADH,KACWkD,GACT,SAAC,KAAD,CAAKS,KAAK,SAASI,QALF,kBAAMhB,GAASiB,EAAAA,EAAAA,IAAcF,GAA7B,EAKjB,sBAKL,ECfYG,EAAc,WACzB,IAAQpB,EAAoBF,IAApBE,gBAER,OACE,SAAC,KAAD,UACGA,EAAgB9C,KAAI,SAAAwC,GAAO,OAC1B,SAACsB,EAAD,CAA8BtB,QAASA,GAArBA,EAAQuB,GADA,KAKjC,ECXY5D,EAAQ,WACnB,IAAMkC,EAAQO,IACd,OAAO,SAAC,KAAD,UAAMP,GACd,E,UCAY8B,EAAS,WACpB,IAAMnB,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,mCAEE,SAAC,KAAD,CAAOhD,KAAK,SAAS2D,KAAK,OAAOQ,SANlB,SAAAC,GAAG,OAAIrB,GAASsB,EAAAA,EAAAA,GAAcD,EAAIE,cAAclG,OAA7C,QAUzB,E,UCqBD,EA5BiB,WACf,MAAuCuE,IAA/BZ,EAAR,EAAQA,SAAUG,EAAlB,EAAkBA,UAAWE,EAA7B,EAA6BA,MAEvBmC,GAAUvB,EAAAA,EAAAA,MAMhB,OAJAwB,EAAAA,EAAAA,YAAU,WACRD,GAAQE,EAAAA,EAAAA,MACT,GAAE,CAACF,KAGF,iCACE,SAAC,KAAD,yBAEA,SAACzB,EAAD,KAEA,SAACoB,EAAD,KAEA,SAAC,KAAD,uBAEChC,IAAcE,IAAS,SAACsC,EAAA,EAAD,IAEvBtC,IAAS,SAAC,EAAD,IAETL,IAAaK,IAAS,SAAC6B,EAAD,MAG5B,C,sHCpCYU,EAAeC,EAAAA,KAAaC,MAAM,CAC7C7E,KAAM4E,EAAAA,KACHE,IAAI,EAAG,yCACPC,IAAI,GAAI,0CACRC,SAAS,oBACZC,MAAOL,EAAAA,KAAaK,MAAM,iBAAiBD,SAAS,qBACpDE,SAAUN,EAAAA,KACPI,SAAS,yBACTF,IAAI,EAAG,sDACPK,QAAQ,WAAY,8CAIZC,EAAcR,EAAAA,KAAaC,MAAM,CAC5CI,MAAOL,EAAAA,KAAaK,MAAM,iBAAiBD,SAAS,qBACpDE,SAAUN,EAAAA,KACPI,SAAS,yBACTF,IAAI,EAAG,sDACPK,QAAQ,WAAY,8CAGZ/B,EAAgBwB,EAAAA,KAAaC,MAAM,CAC9C7E,KAAM4E,EAAAA,KACHE,IAAI,EAAG,yCACPC,IAAI,GAAI,yCACRC,SAAS,oBACZ9B,OAAQ0B,EAAAA,KACLO,QAAQ,iBAAkB,iCAC1BH,SAAS,sBAKkBJ,EAAAA,KAAaC,MAAM,CACjD7E,KAAM4E,EAAAA,KACHE,IAAI,EAAG,yCACPC,IAAI,GAAI,0CACRC,SAAS,oBACZ9B,OAAQ0B,EAAAA,KACLO,QAAQ,iBAAkB,mJAC1BH,SAAS,oBACZC,MAAOL,EAAAA,KAAaK,MAAM,iBAAiBD,SAAS,qBACpDE,SAAUN,EAAAA,KACPI,SAAS,yBACTF,IAAI,EAAG,sDACPK,QAAQ,WAAY,6C","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","hooks/useContacts.js","components/ContactForm.jsx","components/ContactItem.jsx","components/ContactList.jsx","components/Error.jsx","components/Filter.jsx","psges/Contacts.jsx","validation.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value;\n\n// === мемоизированный селектор. Не вижу разницы с составным ===\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n\n  (contacts, filter) => {\n    // console.log('memoSelect');\n\n    const filterContact = contacts.filter(contact =>\n      contact.name\n        .toLocaleLowerCase()\n        .includes(filter.toLocaleLowerCase().trim())\n    );\n\n    return filterContact;\n  }\n);\n\n// ==== составной селектор. Не вижу разныцы с мемоизированным ===\n\n// export const selectFilteredContacts = state => {\n//   console.log('select');\n\n//   const contacts = selectContacts(state);\n//   const filter = selectFilter(state);\n\n//   const filterContact = contacts.filter(contact =>\n//     contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase().trim())\n//   );\n\n//   return filterContact;\n// };\n","import { useSelector } from 'react-redux';\n\nimport {\n  selectContacts,\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  return {\n    contacts: useSelector(selectContacts),\n    isLoading: useSelector(selectIsLoading),\n    error: useSelector(selectError),\n    filteredContact: useSelector(selectFilteredContacts),\n  };\n};\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/thunks';\nimport { ContactSchema } from 'validation';\nimport { useContacts } from 'hooks/useContacts';\n\nimport {\n  Label,\n  Form,\n  ErrorMessage,\n  Field,\n  Btn,\n} from '../Styles/StyleForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const { contacts } = useContacts();\n\n  const values = {\n    name: '',\n    number: '',\n  };\n\n  const handleSubmit = (values, actions) => {\n    const isExist = contacts.find(contact => contact.name === values.name);\n\n    if (isExist) {\n      alert(`${values.name} ia already in contacts`);\n    } else {\n      dispatch(addContact(values));\n    }\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={values}\n      validationSchema={ContactSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Label>\n          Name\n          <Field name=\"name\" type=\"text\" />\n          <ErrorMessage name=\"name\" component={'span'} />\n        </Label>\n\n        <Label>\n          Number\n          <Field name=\"number\" type=\"tel\" />\n          <ErrorMessage name=\"number\" component={'span'} />\n        </Label>\n\n        <Btn type=\"submit\">Add contact</Btn>\n      </Form>\n    </Formik>\n  );\n};\n","import PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/thunks';\n\nimport { Btn, Item } from 'Styles/StyleForm.styled';\n\nexport const ContactItem = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Item>\n      {name}: {number}\n      <Btn type=\"button\" onClick={handleDelete}>\n        Delite\n      </Btn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }).isRequired,\n};\n","import { ContactItem } from './ContactItem';\nimport { useContacts } from 'hooks/useContacts';\n\nimport { List } from 'Styles/StyleForm.styled';\n\nexport const ContactList = () => {\n  const { filteredContact } = useContacts();\n\n  return (\n    <List>\n      {filteredContact.map(contact => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n","import { useContacts } from 'hooks/useContacts';\n\nimport { Err } from 'Styles/StyleForm.styled';\n\nexport const Error = () => {\n  const error = useContacts();\n  return <Err>{error}</Err>;\n};\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport { filterContact } from 'redux/contacts/filterSlice';\n\nimport { Label, Field } from '../Styles/StyleForm.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => dispatch(filterContact(evt.currentTarget.value));\n\n  return (\n    <Formik>\n      <Label>\n        Find contact by name\n        <Field name=\"filter\" type=\"text\" onChange={changeFilter} />\n      </Label>\n    </Formik>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Error } from 'components/Error';\nimport { Filter } from 'components/Filter';\nimport { Loading } from 'components/Loading';\nimport { useContacts } from 'hooks/useContacts';\nimport { fetchContacts } from 'redux/contacts/thunks';\n\nimport { Title, TitleContact } from 'Styles/StyleForm.styled';\n\nconst Contacts = () => {\n  const { contacts, isLoading, error } = useContacts();\n\n  const dipatch = useDispatch();\n\n  useEffect(() => {\n    dipatch(fetchContacts());\n  }, [dipatch]);\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n\n      <ContactForm />\n\n      <Filter />\n\n      <TitleContact>Contacts</TitleContact>\n\n      {isLoading && !error && <Loading />}\n\n      {error && <Error />}\n\n      {contacts && !error && <ContactList />}\n    </>\n  );\n};\n\nexport default Contacts;\n","import * as Yup from 'yup';\n\n// схему валидации должен давать бэкэнд?\nexport const SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(5, 'Too short - should be 5 chars minimum')\n    .max(20, 'Too lond! - should be 20 chars maximum')\n    .required('No name provided'),\n  email: Yup.string().email('Invalid email').required('No email provided'),\n  password: Yup.string()\n    .required('No password provided.')\n    .min(6, 'Password is too short - should be 6 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\n// схему валидации должен давать бэкэнд?\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('No email provided'),\n  password: Yup.string()\n    .required('No password provided.')\n    .min(6, 'Password is too short - should be 6 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nexport const ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(5, 'Too short - should be 5 chars minimum')\n    .max(20, 'Too lond - should be 20 chars maximum')\n    .required('No name provided'),\n  number: Yup.string()\n    .matches(/[+3][0-9]{12}$/, 'Phone should be +380000000000')\n    .required('No name provided'),\n});\n\n// можно ли сделать 1 валюдацию на все? пока так не работает\n// (не сабмитится - наверное потому что не все параметры)\nexport const validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(5, 'Too short - should be 5 chars minimum')\n    .max(20, 'Too lond! - should be 20 chars maximum')\n    .required('No name provided'),\n  number: Yup.string()\n    .matches(/[+3][0-9]{12}$/, 'Заполните поле в формате +380000000000')\n    .required('No name provided'),\n  email: Yup.string().email('Invalid email').required('No email provided'),\n  password: Yup.string()\n    .required('No password provided.')\n    .min(6, 'Password is too short - should be 6 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","contact","toLocaleLowerCase","includes","trim","useContacts","useSelector","filteredContact","ContactForm","dispatch","useDispatch","initialValues","number","validationSchema","ContactSchema","onSubmit","values","actions","alert","addContact","resetForm","type","component","ContactItem","id","onClick","deleteContact","ContactList","Filter","onChange","evt","filterContact","currentTarget","dipatch","useEffect","fetchContacts","Loading","SignupSchema","Yup","shape","min","max","required","email","password","matches","LoginSchema"],"sourceRoot":""}