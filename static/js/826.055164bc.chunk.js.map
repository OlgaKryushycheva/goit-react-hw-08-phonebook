{"version":3,"file":"static/js/826.055164bc.chunk.js","mappings":"qOAWaA,EAAe,WAY1B,OACE,SAAC,KAAD,CACEC,cAbW,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAWRC,iBAAkBC,EAAAA,GAClBC,SATiB,SAACC,EAAQC,GAC5BC,QAAQC,IAAIH,GACZC,EAAQG,WACT,EAGC,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,mBAEE,SAAC,KAAD,CAAOV,KAAK,OAAOW,KAAK,UACxB,SAAC,KAAD,CAAcX,KAAK,OAAOY,UAAW,aAGvC,UAAC,KAAD,oBAEE,SAAC,KAAD,CAAOZ,KAAK,QAAQW,KAAK,WACzB,SAAC,KAAD,CAAcX,KAAK,QAAQY,UAAW,aAGxC,UAAC,KAAD,sBAEE,SAAC,KAAD,CAAOZ,KAAK,WAAWW,KAAK,cAC5B,SAAC,KAAD,CAAcX,KAAK,WAAWY,UAAW,aAG3C,SAAC,KAAD,CAAKD,KAAK,SAAV,yBAIP,ECxCD,EATiB,WACf,OACE,iCACE,SAAC,KAAD,+BACA,SAACb,EAAD,MAGL,C,sHCQYM,GAfmBS,EAAAA,KAAaC,MAAM,CACjDd,KAAMa,EAAAA,KACHE,IAAI,EAAG,yCACPC,IAAI,GAAI,0CACRC,SAAS,oBACZC,MAAOL,EAAAA,KACJM,QAAQ,iBAAkB,mJAC1BF,SAAS,oBACZhB,MAAOY,EAAAA,KAAaZ,MAAM,iBAAiBgB,SAAS,qBACpDf,SAAUW,EAAAA,KACPI,SAAS,yBACTF,IAAI,EAAG,sDACPI,QAAQ,WAAY,8CAGGN,EAAAA,KAAaC,MAAM,CAC7Cd,KAAMa,EAAAA,KACHE,IAAI,EAAG,yCACPC,IAAI,GAAI,0CACRC,SAAS,oBACZhB,MAAOY,EAAAA,KAAaZ,MAAM,iBAAiBgB,SAAS,qBACpDf,SAAUW,EAAAA,KACPI,SAAS,yBACTF,IAAI,EAAG,sDACPI,QAAQ,WAAY,+CAGZC,EAAcP,EAAAA,KAAaC,MAAM,CAC5Cd,KAAMa,EAAAA,KACHE,IAAI,EAAG,yCACPC,IAAI,GAAI,0CACRC,SAAS,oBACZhB,MAAOY,EAAAA,KAAaZ,MAAM,iBAAiBgB,SAAS,uBAGzCI,EAAgBR,EAAAA,KAAaC,MAAM,CAC9Cd,KAAMa,EAAAA,KACHE,IAAI,EAAG,yCACPC,IAAI,GAAI,yCACRC,SAAS,oBACZC,MAAOL,EAAAA,KACJM,QAAQ,iBAAkB,iCAC1BF,SAAS,qB","sources":["components/RegisterForm.jsx","psges/Register.jsx","validation.js"],"sourcesContent":["import { Formik } from 'formik';\nimport { SignupSchema } from 'validation';\n\nimport {\n  Label,\n  Form,\n  ErrorMessage,\n  Field,\n  Btn,\n} from '../Styles/StyleForm.styled';\n\nexport const RegisterForm = () => {\n  const values = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, actions) => {\n    console.log(values);\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={values}\n      validationSchema={SignupSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Label>\n          Name\n          <Field name=\"name\" type=\"text\" />\n          <ErrorMessage name=\"name\" component={'span'} />\n        </Label>\n\n        <Label>\n          Email\n          <Field name=\"email\" type=\"email\" />\n          <ErrorMessage name=\"email\" component={'span'} />\n        </Label>\n\n        <Label>\n          Pasword\n          <Field name=\"password\" type=\"password\" />\n          <ErrorMessage name=\"password\" component={'span'} />\n        </Label>\n\n        <Btn type=\"submit\">Sign up</Btn>\n      </Form>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm';\nimport { Title } from 'Styles/StyleForm.styled';\n\nconst Register = () => {\n  return (\n    <>\n      <Title>Please, sign up</Title>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default Register;\n","import * as Yup from 'yup';\n// const phoneRegExp = /[+3][0-9]{12}$/;\n\nexport const validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(5, 'Too short - should be 5 chars minimum')\n    .max(20, 'Too lond! - should be 20 chars maximum')\n    .required('No name provided'),\n  phone: Yup.string()\n    .matches(/[+3][0-9]{12}$/, 'Заполните поле в формате +380000000000')\n    .required('No name provided'),\n  email: Yup.string().email('Invalid email').required('No email provided'),\n  password: Yup.string()\n    .required('No password provided.')\n    .min(6, 'Password is too short - should be 6 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nexport const SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(5, 'Too short - should be 5 chars minimum')\n    .max(20, 'Too lond! - should be 20 chars maximum')\n    .required('No name provided'),\n  email: Yup.string().email('Invalid email').required('No email provided'),\n  password: Yup.string()\n    .required('No password provided.')\n    .min(6, 'Password is too short - should be 6 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nexport const LoginSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(5, 'Too short - should be 5 chars minimum')\n    .max(20, 'Too lond! - should be 20 chars maximum')\n    .required('No name provided'),\n  email: Yup.string().email('Invalid email').required('No email provided'),\n});\n\nexport const ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(5, 'Too short - should be 5 chars minimum')\n    .max(20, 'Too lond - should be 20 chars maximum')\n    .required('No name provided'),\n  phone: Yup.string()\n    .matches(/[+3][0-9]{12}$/, 'Phone should be +380000000000')\n    .required('No name provided'),\n});\n"],"names":["RegisterForm","initialValues","name","email","password","validationSchema","SignupSchema","onSubmit","values","actions","console","log","resetForm","type","component","Yup","shape","min","max","required","phone","matches","LoginSchema","ContactSchema"],"sourceRoot":""}